# Generated by Django 5.1.2 on 2024-10-17 13:20

import django.db.models.deletion
import uuid6
from django.conf import settings
from django.db import migrations, models

import validations.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("core", "0001_initial"),
        ("counter", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ValidationCore",
            fields=[
                ("created", models.DateTimeField(auto_now_add=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid6.uuid7, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "cop_version",
                    models.CharField(
                        blank=True,
                        help_text="COUNTER CoP version as reported by the validation module",
                        max_length=16,
                    ),
                ),
                (
                    "report_code",
                    models.CharField(
                        blank=True,
                        help_text="Code of the report as reported by the validation module",
                        max_length=16,
                    ),
                ),
                (
                    "status",
                    models.SmallIntegerField(
                        choices=[(0, "Waiting"), (1, "Running"), (2, "Success"), (3, "Failure")]
                    ),
                ),
                ("user_email_checksum", models.CharField(max_length=64)),
                (
                    "platform_name",
                    models.CharField(
                        blank=True,
                        help_text="Contains the platform name supplied by the user. If `platform` is set, this is a copy of the platform name",
                        max_length=150,
                    ),
                ),
                (
                    "validation_result",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, ""),
                            (10, "Passed"),
                            (20, "Notice"),
                            (30, "Warning"),
                            (40, "Error"),
                            (50, "Critical error"),
                            (60, "Fatal error"),
                        ],
                        default=0,
                        help_text="The worst result of all the results in the validation",
                    ),
                ),
                ("file_checksum", models.CharField(blank=True, max_length=64)),
                (
                    "file_size",
                    models.PositiveBigIntegerField(help_text="Size of the validated file in bytes"),
                ),
                (
                    "used_memory",
                    models.PositiveBigIntegerField(
                        help_text="Memory in bytes used by the validation module", null=True
                    ),
                ),
                (
                    "duration",
                    models.FloatField(
                        help_text="Time in seconds used by the validation module", null=True
                    ),
                ),
                (
                    "stats",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Statistics from the validation module - number of messages for each severity",
                    ),
                ),
                ("sushi_credentials_checksum", models.CharField(blank=True, max_length=64)),
                (
                    "platform",
                    models.ForeignKey(
                        help_text="If the platform is in the registry, this can link it",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="counter.platform",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
            },
        ),
        migrations.CreateModel(
            name="Validation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid6.uuid7, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("task_id", models.CharField(blank=True, max_length=255, null=True, unique=True)),
                (
                    "filename",
                    models.CharField(blank=True, help_text="Original filename", max_length=256),
                ),
                (
                    "file",
                    models.FileField(null=True, upload_to=validations.models.validation_upload_to),
                ),
                ("result_data", models.JSONField(null=True)),
                ("user_note", models.TextField(blank=True)),
                (
                    "api_key",
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.CASCADE, to="core.userapikey"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "core",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="validations.validationcore"
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
            },
        ),
    ]
